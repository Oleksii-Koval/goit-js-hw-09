{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGrCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAvCSO,SAASC,cAAc,SAE/BC,iBAAiB,UAGxB,SAAqBC,GACnBA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBG,OAAQC,EAAgBJ,EAAhBZ,MAAOiB,EAASL,EAATK,KACjBC,EAAcC,OAAOJ,EAAOK,OAC5BC,EAAaF,OAAOH,EAAMI,OAC1BE,EAAYH,OAAOF,EAAKG,OAE9B,GAAIF,EAAc,GAAKG,EAAa,GAAKC,EAAY,EACnD1B,EAAA2B,OAAOC,QAAS,yCAEd,IAAG,IAAIC,EAAI,EAAGA,GAAKP,EAAaO,GAAK,EAAE,CAGzC3B,EADe2B,EADAJ,EAAcC,EAAYG,EAAKH,GAG3CI,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBJ,EAAA2B,OAAOK,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE9D8B,OAAO,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACnBJ,EAAA2B,OAAOQ,QAAQ,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport \"flatpickr/dist/flatpickr.min.css\";\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', handlerForm);\n\n\nfunction handlerForm(event) {\n  event.preventDefault();\n  const { amount, delay, step } = event.target.elements;\n  const inputAmount = Number(amount.value);\n  const inputDelay = Number(delay.value);\n  const inputStep = Number(step.value);\n\n  if (inputAmount < 0 || inputDelay < 0 || inputStep < 0) {\n    Notify.warning(`❗ Please enter a positive number`);\n  } else {\n    for (let i = 1; i <= inputAmount; i += 1){\n    const delays = (inputDelay + inputStep * i) - inputStep;\n    let position = i;\n    createPromise(position, delays)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch (({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    };\n  };\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      \n      if (shouldResolve) {\n       resolve({ position, delay })\n      } else {\n       reject({ position, delay })\n      }\n   }, delay)\n  })\n}\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","amount","delay1","step","inputAmount","Number","value","inputDelay","inputStep","Notify","warning","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.9702dda2.js.map"}